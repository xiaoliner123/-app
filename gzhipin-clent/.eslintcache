[{"D:\\web编程\\react\\gzhipin-clent\\src\\index.js":"1","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\register\\register.js":"2","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\login\\login.js":"3","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\main\\main.js":"4","D:\\web编程\\react\\gzhipin-clent\\src\\redux\\store.js":"5","D:\\web编程\\react\\gzhipin-clent\\src\\redux\\reducers.js":"6","D:\\web编程\\react\\gzhipin-clent\\src\\components\\logo\\logo.jsx":"7","D:\\web编程\\react\\gzhipin-clent\\src\\redux\\actions-types.js":"8","D:\\web编程\\react\\gzhipin-clent\\src\\redux\\actions.js":"9","D:\\web编程\\react\\gzhipin-clent\\src\\api\\index.js":"10","D:\\web编程\\react\\gzhipin-clent\\src\\api\\ajax.js":"11","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\laoban-info\\laoban-info.jsx":"12","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\dashen-info\\dashen-info.jsx":"13","D:\\web编程\\react\\gzhipin-clent\\src\\components\\header-selecter\\header-selecter.jsx":"14","D:\\web编程\\react\\gzhipin-clent\\src\\utils\\index.js":"15","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\laoban\\laoban.jsx":"16","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\dashen\\dashen.jsx":"17","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\message\\message.jsx":"18","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\personal\\personal.jsx":"19","D:\\web编程\\react\\gzhipin-clent\\src\\components\\notfound\\notfound.jsx":"20","D:\\web编程\\react\\gzhipin-clent\\src\\components\\nav-footer\\nav-footer.jsx":"21","D:\\web编程\\react\\gzhipin-clent\\src\\components\\user-list\\user-list.jsx":"22","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\chat\\chat.jsx":"23","D:\\web编程\\react\\gzhipin-clent\\src\\test\\socketio_test.js":"24"},{"size":749,"mtime":1613729337187,"results":"25","hashOfConfig":"26"},{"size":2819,"mtime":1611585679684,"results":"27","hashOfConfig":"26"},{"size":1998,"mtime":1617887861913,"results":"28","hashOfConfig":"26"},{"size":4300,"mtime":1614159972366,"results":"29","hashOfConfig":"26"},{"size":316,"mtime":1611063968431,"results":"30","hashOfConfig":"26"},{"size":2763,"mtime":1614249446456,"results":"31","hashOfConfig":"26"},{"size":265,"mtime":1610632852074,"results":"32","hashOfConfig":"26"},{"size":580,"mtime":1614248719924,"results":"33","hashOfConfig":"26"},{"size":4960,"mtime":1614161101890,"results":"34","hashOfConfig":"26"},{"size":662,"mtime":1613831903426,"results":"35","hashOfConfig":"26"},{"size":587,"mtime":1611061536128,"results":"36","hashOfConfig":"26"},{"size":1887,"mtime":1613811619557,"results":"37","hashOfConfig":"26"},{"size":1574,"mtime":1613811644598,"results":"38","hashOfConfig":"26"},{"size":1256,"mtime":1612182589054,"results":"39","hashOfConfig":"26"},{"size":247,"mtime":1611499651908,"results":"40","hashOfConfig":"26"},{"size":502,"mtime":1612622282632,"results":"41","hashOfConfig":"26"},{"size":502,"mtime":1618731000514,"results":"42","hashOfConfig":"26"},{"size":2424,"mtime":1614249290515,"results":"43","hashOfConfig":"26"},{"size":1716,"mtime":1613986844359,"results":"44","hashOfConfig":"26"},{"size":439,"mtime":1611932346486,"results":"45","hashOfConfig":"26"},{"size":1304,"mtime":1614159758904,"results":"46","hashOfConfig":"26"},{"size":1534,"mtime":1613905216191,"results":"47","hashOfConfig":"26"},{"size":5674,"mtime":1614250308500,"results":"48","hashOfConfig":"26"},{"size":259,"mtime":1613728716761,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"bacmk3",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web编程\\react\\gzhipin-clent\\src\\index.js",[],["101","102"],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\register\\register.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\login\\login.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\main\\main.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\redux\\store.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\redux\\reducers.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\components\\logo\\logo.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\redux\\actions-types.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\redux\\actions.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\api\\index.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\api\\ajax.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\laoban-info\\laoban-info.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\dashen-info\\dashen-info.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\components\\header-selecter\\header-selecter.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\utils\\index.js",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\laoban\\laoban.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\dashen\\dashen.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\message\\message.jsx",["103"],"import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {List,Badge} from 'antd-mobile'\r\nconst Item = List.Item\r\nconst Brief = Item.Brief\r\n\r\n//分组函数，得到每个组lastMsg组成的数组\r\nfunction getLastMsgs(chatMsgs,userid){ \r\n    //找出每组聊天的lastMsg，存入lastMsgObjs{chat_id：lastMSg}\r\n    const lastMsgObjs = {}\r\n    chatMsgs.forEach(msg => {\r\n\r\n        if(msg.to2===userid&&!msg.read){\r\n            msg.unReadCount = 1\r\n        }else{  \r\n            msg.unReadCount = 0\r\n        }\r\n        const chatId = msg.chat_id\r\n        const lastMsg = lastMsgObjs[chatId]\r\n        console.log(msg,msg.unReadCount)\r\n        if(!lastMsg){\r\n            lastMsgObjs[chatId] = msg\r\n        }else{\r\n            //保存已经统计的未读数量\r\n            const unReadCount = lastMsg.unReadCount + msg.unReadCount\r\n            if(msg.create_time > lastMsg.create_time){\r\n                lastMsgObjs[chatId] = msg\r\n            }\r\n            lastMsgObjs[chatId].unReadCount = unReadCount\r\n        }\r\n    })\r\n    //得到所有lastMsg数组\r\n    const lastMsgs = Object.values(lastMsgObjs)\r\n    //对数组进行排序\r\n    lastMsgs.sort(function(m1,m2){//结果<0，m1在前面，=0不变，>0m2在前\r\n        return m2.create_time-m1.create_time\r\n    })\r\n    console.log(lastMsgs)\r\n    return lastMsgs\r\n}\r\nclass Message extends Component{\r\n    render(){\r\n\r\n        const {user} = this.props\r\n        const {users,chatMsgs} = this.props.chat\r\n        //按chat_id对chatMsg分组\r\n        const lastMsgs = getLastMsgs(chatMsgs,user.username)\r\n        return (\r\n            <List style={{marginTop:50,marginBottom:50}}>\r\n                {\r\n                    lastMsgs.map(msg =>(\r\n                        <Item\r\n                        key={msg.id}\r\n                        extra={<Badge text={msg.unReadCount}/>}\r\n                        thumb={require(`../../assets/images/icon_zses4r8c5yf/icon-test_1.png`).default}\r\n                        arrow='horizontal'\r\n                        onClick={() => this.props.history.push(`/chat/${msg.to2}`)}\r\n                        >\r\n                            {msg.content}\r\n                    <Brief>{msg.to2}</Brief>\r\n                        </Item>   \r\n                    ))\r\n                }\r\n            </List>\r\n        ) \r\n    }\r\n}\r\nexport default connect(\r\n    state =>({user:state.user,chat:state.chat}),\r\n    {}\r\n)(Message)","D:\\web编程\\react\\gzhipin-clent\\src\\containers\\personal\\personal.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\components\\notfound\\notfound.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\components\\nav-footer\\nav-footer.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\components\\user-list\\user-list.jsx",[],"D:\\web编程\\react\\gzhipin-clent\\src\\containers\\chat\\chat.jsx",["104"],"import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavBar,List,InputItem,Grid,Icon} from 'antd-mobile'\r\nimport {readMsg,sendMsg} from '../../redux/actions'\r\nimport QueueAnim from 'rc-queue-anim'\r\nconst Item = List.Item\r\nclass Chat extends Component{\r\n    state = {\r\n        content:'',\r\n        isShow: false //是否显示表情\r\n    }\r\n\r\n    //在第一次render之前回调\r\n    componentWillMount(){\r\n        //初始化表情数据\r\n        const emojis = ['😃','🐻','🍔','⚽','🌇','💡','🔣','🎌','😃','🐻','🍔','⚽','🌇','💡','🔣','🎌','😃','🐻','🍔','⚽','🌇','💡','🔣','🎌',\r\n        '😃','🐻','🍔','⚽','🌇','💡','🔣','🎌','😃','🐻','🍔','⚽','🌇','💡','🔣','🎌','😃','🐻','🍔','⚽','🌇','💡','🔣','🎌']\r\n        this.emojis = emojis.map(emoji => ({text:emoji}))\r\n    }\r\n    componentDidMount(){\r\n        //初始化显示列表\r\n        window.scrollTo(0,document.body.scrollHeight)\r\n        //发请求更新消息\r\n        const targetId = this.props.match.params.userid\r\n        const userid = this.props.user.username\r\n        this.props.readMsg(targetId,userid)\r\n    }\r\n    componentDidUpdate(){\r\n        window.scrollTo(0,document.body.scrollHeight)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const targetId = this.props.match.params.userid\r\n        const userid = this.props.user.username\r\n        this.props.readMsg(targetId,userid)\r\n    }\r\n    toggleShow = () => {\r\n        const isShow = !this.state.isShow\r\n        this.setState({isShow})\r\n        if(isShow){\r\n            setTimeout(() => {\r\n                window.dispatchEvent(new Event('resize'))\r\n            },0)\r\n        }\r\n    }\r\n\r\n    handleSend = () =>{\r\n        //收集数据\r\n        console.log(this.state.content)\r\n        const from2 = this.props.user.username\r\n        const to2 = this.props.match.params.userid\r\n        const content = this.state.content\r\n        //发送请求\r\n        if(content){\r\n            this.props.sendMsg(from2,to2,content)\r\n        }\r\n        //清除数据\r\n        this.setState({content:''})\r\n    }\r\n\r\n    render(){\r\n        const {user} = this.props\r\n        const {users,chatMsgs} = this.props.chat\r\n        \r\n        //计算当前聊天的chatid\r\n        const meId = user.username\r\n        // if(!users[meId]){\r\n        //     return null\r\n        // }\r\n        const targetId = this.props.match.params.userid\r\n        const chatId = [meId,targetId].sort().join('_')\r\n        //对chatMsgs进行过滤\r\n        const msgs = chatMsgs.filter(msg => msg.chat_id===chatId )\r\n        //得到目标用户头像(暂不可用)\r\n        //const targetHeader = users[targetId].header\r\n        //const targetIcon = targetHeader ? require(`../../assets/images/icon_zses4r8c5yf/${targetHeader}.png`).default : null\r\n        return(\r\n            <div id='chat-page'>\r\n                <NavBar \r\n                    icon={<Icon type='left' onClick={() => this.props.history.goBack()}/>} \r\n                    className='sticky-header'>\r\n                    {targetId}\r\n                </NavBar>\r\n                <List style={{marginTop:50,marginBottom:50}}>\r\n                    <QueueAnim type='alpha'>\r\n                    {\r\n                        msgs.map(msg => {\r\n                            if(targetId===msg.from2){\r\n                                return(\r\n                                    <Item\r\n                                        key={msg.id}\r\n                                        thumb={require('../../assets/images/icon_zses4r8c5yf/icon-test_17.png').default}\r\n                                    >\r\n                                        {msg.content}\r\n                                    </Item>\r\n                                )  \r\n                            }else{\r\n                                return(\r\n                                    <Item\r\n                                        key={msg.id}\r\n                                        className='chat-me'\r\n                                        extra='我'\r\n                                    >\r\n                                        {msg.content}\r\n                                    </Item>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                    </QueueAnim>\r\n                </List>\r\n                <div className='chat-send'>\r\n                    <InputItem\r\n                        placeholder='请输入'\r\n                        value={this.state.content}\r\n                        onChange={val => this.setState({content:val})}\r\n                        onFocus={() => this.setState({isShow:false})}\r\n                        extra={\r\n                            <span>\r\n                                <span onClick={this.toggleShow}>😃</span>&nbsp;\r\n                                <span onClick={this.handleSend}>发送</span>                            \r\n                            </span>\r\n                        }\r\n                    />\r\n                    {this.state.isShow ? \r\n                    <Grid\r\n                        data={this.emojis}\r\n                        columnNum={8}\r\n                        carouselMaxRow={4}\r\n                        isCarousel={true}\r\n                        onClick={(item) =>{\r\n                            this.setState({content:this.state.content + item.text})\r\n                        }}\r\n                    /> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user:state.user,chat:state.chat}),\r\n    {readMsg,sendMsg}\r\n)(Chat)","D:\\web编程\\react\\gzhipin-clent\\src\\test\\socketio_test.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":45,"column":16,"nodeType":"111","messageId":"112","endLine":45,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":63,"column":16,"nodeType":"111","messageId":"112","endLine":63,"endColumn":21},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]